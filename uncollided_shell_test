import numpy as np 
import math
x0 = 0.5


def shell_IC_uncollided_solution(self, xs, t):
        temp = xs*0 
        sigma_abs = 0.0
        N0  = 4 * math.pi * x0**3 / 3
        for ix, r in enumerate(xs):
            tt = t + 1e-12
            mu_crit = min(1., max(-1.,0.5*(tt/r+r/tt-x0**2/(r*tt))))
            r2 = r ** 2 + t ** 2 - 2 * mu_crit * r * t
            if np.sqrt(r2) < self.x0: 
                temp[ix] = N0 *  (1. - mu_crit ) * np.exp(-t * sigma_abs) * 0.25 / math.pi / self.x0 **2
        return temp